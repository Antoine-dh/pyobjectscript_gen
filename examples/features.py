from pyobjectscript_gen.cls import *
import sys

if __name__ == "__main__":
    cls = Class(
        "cls.Features",
        extends=["%Persistent", "%XML.Adaptor"],
        components=[
            Parameter(
                "PARAM1",
                type="STRING", 
                value="value",
                doc_string="Parameter with type and default value",
                keywords={
                    "Final": None
                },
            ),
            Parameter(
                name="COMPILETIME",
                value=Expression("{$zdatetime($h)}"),
                doc_string="Parameter with expression"
            ),
            Property("Id", 
                type="%Integer",
                doc_string="Required property",
                keywords={
                    'Required': None,
                    'InitialExpression': 0,
                }
            ),
            Property("Test Property_Parameters", 
                type="%String",
                params={
                    "XMLNAME": "test_property_parameters",
                    "MAXLEN": 50,
                },
                doc_string="Property name with spaces and underscores, with property parameters"
            ),
            Property("ListOfString", 
                type="%String",
                collection="List",
                doc_string="List Property example",
            ),
            Property("ArrayOfInteger", 
                type="%Integer",
                collection="Array",
                doc_string="Array Property example",
            ),
            Method(
                "SimpleMethod",
                return_type="%Status",
                impl=["Quit $$$OK"],
                doc_string="Simple method without arguments",
            ),
            ClassMethod(
                "SimpleClassMethod",
                return_type="%Status",
                impl=["Quit $$$OK"],
                doc_string="Simple class method without arguments",
            ),
            Method(
                "MethodWithArgs",
                return_type="%Status",
                arguments=[
                    MethodArgument(
                        "pInput",
                        type="Ens.StringRequest",
                    ),
                    MethodArgument(
                        "pOutput",
                        type="Ens.StringResponse",
                        prefix="Output",
                        value=Expression("{##class(Ens.StringResponse).%New()}")
                    ),
                ],
                impl=[
                    "$$$TRACE(pInput.StringValue)",
                    'set pOutput.StringValue = "Hello World"',
                    "Quit $$$OK",
                ],
                doc_string="Multi line method with arguments",
            ),
            Storage(
                doc_string="Empty storage"
            ),
        ],
        doc_string="Test class for every features capable to be generated by the library",
        keywords={
            "Inheritance": "left",
            "Final": None,
        }
    )

    if len(sys.argv) > 1:
        with open(sys.argv[1], 'w') as file:
            cls.generate(file)
    else:
        cls.generate()
